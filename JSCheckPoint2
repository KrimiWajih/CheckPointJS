/* Reverse String */

var chaine = "the quick brown for jumped over the lazy dog".split("");
function reverseChaine(chaine) {
  var tab = [];
  for (i = chaine.length - 1; i >= 0; i--) {
    tab.push(chaine[i]);
  }
  return tab;
}
console.log(reverseChaine(chaine).join(" "));

/* Count Number of characters including spaces */
function countCharacters(str) {
  return str.length;
}

/* Fcunction CapitalizeWords that capitalizes the first letter of each word in a sentence. */
function CapitalizeWords(string) {
  if (string.length === 0) return string;
  let result = string[0].toUpperCase();
  for (let i = 1; i < string.length; i++) {
    if (string[i - 1] === " ") {
      result += string[i].toUpperCase();
    } else {
      result += string[i];
    }
  }
  return result;
}
/* Function max */

function max(array) {
  var x = 0;
  for (i = 0; i < numbers.length; i++) {
    if (numbers[i] > x) {
      x = numbers[i];
    }
  }
  return x;
}
///////// function MIN ////////////////
function min(array) {
  var min = array[0];
  for (i = 1; i < array.length; i++) {
    if (numbers[i] < min) {
      min = array[i];
    }
  }
  return min;
}
/* Function Max  */
function max(array) {
  var x = 0;
  for (i = 0; i < array.length; i++) {
    if (array[i] > x) {
      x = array[i];
    }
  }
  return x;
}
/* Function that calculates the sum of all elements in an array */
function Sum(array) {
  var x = 0;
  for (i = 0; i < array.length; i++) {
    x += array[i];
  }
  return x;
}
/* a function that filters out elements from an array based on a given condition. */
var numbers = [6, 5, 9, 7, 2, 3, 1, 20];
function filterArray(arr, condition) {
  return arr.filter(condition);
}
//Example
let oddNumbers = filterArray(numbers, function (num) {
  return num % 2 !== 0;
});
console.log(oddNumbers);
/* Function Factorial of n */
function fact(n) {
  var i = 1;
  var x = 1;
  while (i <= n) {
    x = x * i;
    i++;
  }
  return x;
}
/* function to check if a number is prime or not. */
function isPrime(num) {
  let divisorCount = 0;
  for (let i = 1; i <= num; i++) {
    if (num % i === 0) {
      divisorCount++;
    }
    if (divisorCount > 2) {
      return false;
    }
  }
  return divisorCount === 2;
}
/*  function to generate the Fibonacci sequence up to a given number of terms  */
function fib1(n) {
  if (n == 0) {
    return 0;
  }
  if (n == 1) {
    return 1;
  }
  var a = 0;
  var b = 1;
  var fib = 0;
  var y = 2;
  while (y <= n) {
    fib = a + b;
    a = b;
    b = fib;
    y++;
  }
  return fib;
}
